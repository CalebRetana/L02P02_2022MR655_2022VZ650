@model L02P02_2022MR655_2022VZ650.Models.PedidoEncabezado

@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h3 class="text-primary">Listado de Libros</h3>
    <div class="row">
        <div class="col-md-8">
            <ul class="list-group">
                @if (ViewBag.Libros != null && ViewBag.Libros.Count > 0)
                {
                    @foreach (var libro in ViewBag.Libros)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <strong>@libro.Nombre</strong> - $@libro.Precio
                                <input type="number" id="cantidad_@libro.Id" min="1" value="1" class="form-control mt-2" style="width: 60px;">
                            </div>
                            <button class="btn btn-success" onclick="addToCart(@libro.Id, '@libro.Nombre', @libro.Precio)">+ Agregar</button>
                        </li>
                    }
                }
                else
                {
                    <p>No hay libros disponibles.</p>
                }
            </ul>
        </div>

        <div class="col-md-4">
            <h4 class="text-primary mt-4">Carrito</h4>
            <ul id="cartItems" class="list-group mb-3"></ul>
            <h4>Total: $<span id="totalAmount">0.00</span></h4>
            <h4>Libros en el carrito: <span id="totalBooks">0</span></h4>
            <button class="btn btn-info mt-3" onclick="completarCompra(@ViewBag.PedidoId)">Completar Compra</button>
        </div>
    </div>
</div>

<script>
    let totalAmount = 0;
    let totalBooks = 0;
    let carrito = [];

    // Función para agregar al carrito
    function addToCart(libroId, nombre, precio) {
        // Obtener la cantidad ingresada por el usuario
        const cantidad = parseInt(document.getElementById(`cantidad_${libroId}`).value);

        // Verificar si el libro ya está en el carrito
        let item = carrito.find(x => x.libroId === libroId);

        if (item) {
            // Si ya existe, aumentar la cantidad
            item.cantidad += cantidad;
        } else {
            // Si no existe, agregarlo con la cantidad ingresada
            carrito.push({ libroId: libroId, libroNombre: nombre, precio: precio, cantidad: cantidad });
        }

        // Actualizar el total y el número de libros
        totalAmount += precio * cantidad;
        totalBooks += cantidad;

        // Actualizar la vista
        document.getElementById("totalAmount").innerText = totalAmount.toFixed(2);
        document.getElementById("totalBooks").innerText = totalBooks;

        // Actualizar el carrito visualmente
        updateCartView();
    }

    // Actualizar la vista del carrito
    function updateCartView() {
        const cartItems = document.getElementById("cartItems");
        cartItems.innerHTML = "";
        carrito.forEach(item => {
            const li = document.createElement("li");
            li.className = "list-group-item";
            li.textContent = `${item.libroNombre} x ${item.cantidad} - $${(item.precio * item.cantidad).toFixed(2)}`;
            cartItems.appendChild(li);
        });
    }

    // Función para completar la compra
    function completarCompra(pedidoId) {
        fetch('/PedidoEncabezadoes/CerrarVenta', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: pedidoId, total: totalAmount, carrito: carrito })
        }).then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Redirigir directamente a la vista de cierre de venta
                    window.location.href = `/PedidoEncabezadoes/CierreVenta/${pedidoId}`;
                }
            }).catch(error => {
                console.error("Error al completar la compra:", error);
            });
    }
</script>
